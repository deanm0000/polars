polars/_utils/construction/other.py:17: error: Missing type parameters for generic type "Array"  [type-arg]
polars/_utils/construction/other.py:55: error: Missing type parameters for generic type "Array"  [type-arg]
polars/_utils/construction/other.py:62: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:63: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:64: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:65: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:66: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:67: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/other.py:69: error: "Array[Scalar[DictionaryType[Uint32Type, LargeStringType, Literal[False]]]]" has no attribute "combine_chunks"  [attr-defined]
polars/datatypes/classes.py:571: error: Argument "values" to "Series" has incompatible type "polars.series.series.Series | Iterable[str]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/string.py:2592: error: Argument 1 to "Series" has incompatible type "ValuesView[str]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/string.py:2593: error: Argument 1 to "Series" has incompatible type "KeysView[str]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/series.py:394: error: Missing type parameters for generic type "Array"  [type-arg]
polars/_utils/construction/series.py:406: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/series.py:407: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/series.py:421: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/series.py:422: error: "Array[Any]" has no attribute "combine_chunks"  [attr-defined]
polars/_utils/construction/series.py:424: error: "Array[Any]" has no attribute "iterchunks"  [attr-defined]
polars/_utils/construction/series.py:429: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/_utils/construction/series.py:431: error: "Array[Any]" has no attribute "chunks"  [attr-defined]
polars/io/csv/functions.py:318: error: Unexpected keyword argument "column_types" for "ConvertOptions"  [call-arg]
polars/io/csv/functions.py:318: error: Unexpected keyword argument "include_columns" for "ConvertOptions"; did you mean "include_missing_columns"?  [call-arg]
polars/io/csv/functions.py:333: error: Argument 1 to "rename_columns" of "Table" has incompatible type "list[str]"; expected "dict[str, str]"  [arg-type]
polars/expr/expr.py:5774: error: Argument 1 to "Series" has incompatible type "Collection[Any] | polars.series.series.Series"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/expr.py:10273: error: Argument 1 to "Series" has incompatible type "ValuesView[Any]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/expr.py:10274: error: Argument 1 to "Series" has incompatible type "KeysView[Any]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/expr.py:10469: error: Argument 1 to "Series" has incompatible type "ValuesView[Any]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/expr/expr.py:10470: error: Argument 1 to "Series" has incompatible type "KeysView[Any]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/dataframe.py:391: error: Argument "values" to "Series" has incompatible type "Sequence[object] | Mapping[str, Sequence[object]]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/dataframe.py:410: error: Argument "values" to "Series" has incompatible type "Sequence[object] | Mapping[str, Sequence[object]] | polars.series.series.Series"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/dataframe.py:417: error: Argument "values" to "Series" has incompatible type "<subclass of "Iterator" and "Sequence"> | <subclass of "Mapping" and "Iterator"> | <subclass of "Series" and "Iterator"> | list[Any]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/dataframe.py:440: error: Argument 2 to "Series" has incompatible type "<subclass of "Iterator" and "Sequence"> | <subclass of "Mapping" and "Iterator"> | <subclass of "Series" and "Iterator">"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/_utils/construction/dataframe.py:1088: error: Value expression in dictionary comprehension has incompatible type "ndarray[Any, Any]"; expected type "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [misc]
polars/_utils/construction/dataframe.py:1118: error: Argument 1 to "table" has incompatible type "dict[str, Array[Any]]"; expected "dict[str, list[Any] | Array[Any]] | list[Array[Any] | ChunkedArray[Any]] | DataFrame | SupportArrowArray | SupportArrowStream | SupportArrowDeviceArray"  [arg-type]
polars/_utils/construction/dataframe.py:1118: note: "Dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
polars/_utils/construction/dataframe.py:1118: note: Consider using "Mapping" instead, which is covariant in the value type
polars/_utils/construction/dataframe.py:1167: error: Argument 1 to "rename_columns" of "Table" has incompatible type "list[str]"; expected "dict[str, str]"  [arg-type]
polars/_utils/construction/dataframe.py:1167: error: Argument 1 to "rename_columns" of "RecordBatch" has incompatible type "list[str]"; expected "dict[str, str]"  [arg-type]
polars/_utils/construction/dataframe.py:1179: error: Need type annotation for "column"  [var-annotated]
polars/_utils/construction/dataframe.py:1179: error: Argument 1 to "enumerate" has incompatible type "Table | RecordBatch"; expected "Iterable[Never]"  [arg-type]
polars/convert/general.py:361: error: Missing type parameters for generic type "Array"  [type-arg]
polars/convert/general.py:361: error: Missing type parameters for generic type "ChunkedArray"  [type-arg]
polars/convert/general.py:445: error: Argument 2 to "arrow_to_pyseries" has incompatible type "Array[Any] | ChunkedArray[Any]"; expected "Array[Any]"  [arg-type]
polars/convert/general.py:461: error: List item 0 has incompatible type "Any | Array[Any] | RecordBatch"; expected "RecordBatch"  [list-item]
polars/series/series.py:158: error: Missing type parameters for generic type "Array"  [type-arg]
polars/series/series.py:159: error: Missing type parameters for generic type "ChunkedArray"  [type-arg]
polars/series/series.py:325: error: Argument 2 to "arrow_to_pyseries" has incompatible type "Array[Any] | ChunkedArray[Any]"; expected "Array[Any]"  [arg-type]
polars/series/series.py:4434: error: Missing type parameters for generic type "Array"  [type-arg]
polars/series/series.py:4537: error: "Array[Any]" has no attribute "type"  [attr-defined]
polars/series/series.py:4723: error: Argument "values" to "Series" has incompatible type "polars.series.series.Series | Iterable[int] | ndarray[Any, Any]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/series/series.py:4730: error: Argument "values" to "Series" has incompatible type "polars.series.series.Series | list[int | float | Decimal | date | time | timedelta | str | bytes | list[Any] | Any] | Iterable[int | float | Decimal | date | time | datetime | timedelta | str | bool | bytes | list[Any]] | list[Any]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
polars/lazyframe/frame.py:336: error: Function "pyarrow.__lib_pxi.types.schema" is not valid as a type  [valid-type]
polars/lazyframe/frame.py:336: note: Perhaps you need "Callable[...]" or a callback protocol?
polars/dataframe/frame.py:3787: error: Need type annotation for "column"  [var-annotated]
polars/dataframe/frame.py:3787: error: Argument 1 to "enumerate" has incompatible type "Table"; expected "Iterable[Never]"  [arg-type]
polars/dataframe/frame.py:3812: error: Argument "root_path" to "write_to_dataset" has incompatible type "str | IO[bytes]"; expected "str | Path"  [arg-type]
polars/sql/context.py:149: error: Overloaded function implementation does not accept all possible arguments of signature 1  [misc]
polars/sql/context.py:149: error: Overloaded function implementation does not accept all possible arguments of signature 2  [misc]
polars/sql/context.py:149: error: Overloaded function implementation does not accept all possible arguments of signature 3  [misc]
polars/io/database/_executor.py:227: error: Argument 1 to "_apply_overrides" of "ConnectionExecutor" has incompatible type "RecordBatch"; expected "DataFrame"  [arg-type]
polars/io/database/_executor.py:228: error: If condition is always false  [redundant-expr]
tests/unit/test_config.py:489: error: Value expression in dictionary comprehension has incompatible type "int"; expected type "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [misc]
tests/unit/test_chunks.py:9: error: Dict entry 0 has incompatible type "str": "ndarray[Any, Any]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_chunks.py:9: error: Dict entry 1 has incompatible type "str": "ndarray[Any, Any]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interop/numpy/test_numpy.py:42: error: Dict entry 0 has incompatible type "Any": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interop/numpy/test_numpy.py:69: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/functions/test_concat.py:18: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/functions/test_concat.py:21: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_dataframe.py:21: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:23: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:32: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:34: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:65: error: Argument 1 to "DataFrame" has incompatible type "dict[str, Collection[object]]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:67: error: Argument 1 to "DataFrame" has incompatible type "dict[str, Collection[object]]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_dataframe.py:91: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/benchmark/test_join_where.py:74: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:75: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:76: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_32Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:77: error: Dict entry 3 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:82: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:83: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:84: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/test_join_where.py:85: error: Dict entry 3 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:67: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:68: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:69: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:70: error: Dict entry 3 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:71: error: Dict entry 4 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:72: error: Dict entry 5 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:73: error: Dict entry 6 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:74: error: Dict entry 7 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/benchmark/data/h2oai/datagen_groupby.py:75: error: Dict entry 8 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:22: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:22: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:41: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:41: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:55: error: Dict entry 0 has incompatible type "str": "dict_keys[str, str]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:55: error: Dict entry 1 has incompatible type "str": "dict_values[str, str]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:71: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:71: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:91: error: Dict entry 0 has incompatible type "str": "dict_keys[str, str]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:91: error: Dict entry 1 has incompatible type "str": "dict_values[str, str]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:102: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:102: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:113: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:113: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:127: error: Dict entry 0 has incompatible type "str": "dict_keys[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_describe.py:127: error: Dict entry 1 has incompatible type "str": "dict_values[str, float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:251: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:278: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:305: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:359: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:360: error: Dict entry 1 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:388: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:389: error: Dict entry 1 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:443: error: Dict entry 0 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:444: error: Dict entry 1 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:473: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:558: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:571: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:594: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_scan.py:701: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
polars/testing/parametric/strategies/core.py:488: error: Argument 1 to "DataFrame" has incompatible type "dict[str | None, Series]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/test_queries.py:116: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:192: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:193: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:194: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:196: error: Dict entry 4 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:376: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:461: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_projections.py:462: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:405: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:405: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:681: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:682: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:682: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/test_cse.py:689: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_sort.py:60: error: Argument 1 to "LazyFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/streaming/test_streaming_join.py:25: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_join.py:26: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_join.py:33: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_join.py:34: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_join.py:268: error: Argument "data" to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/streaming/test_streaming_join.py:271: error: Argument "data" to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/streaming/test_streaming.py:181: error: Argument 1 to "DataFrame" has incompatible type "dict[str, ndarray[Any, Any]]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/sql/test_miscellaneous.py:203: error: Dict entry 1 has incompatible type "str": "reversed[int]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/series/test_series.py:182: error: Argument 1 to "Series" has incompatible type "dict[str, list[int]]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:608: error: Incompatible types in assignment (expression has type "ChunkedArray[Any]", variable has type "Array[Any]")  [assignment]
tests/unit/series/test_series.py:631: error: "DictionaryArray[Any, Any]" has no attribute "type"  [attr-defined]
tests/unit/series/test_series.py:632: error: "DictionaryArray[Any, Any]" has no attribute "type"  [attr-defined]
tests/unit/series/test_series.py:646: error: No overload variant of "chunked_array" matches argument type "PyCapsuleStreamHolder"  [call-overload]
tests/unit/series/test_series.py:646: note: Possible overload variants:
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[bool | None], type: None = ...) -> ChunkedArray[BooleanScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[int | None], type: None = ...) -> ChunkedArray[Int64Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[float | None], type: None = ...) -> ChunkedArray[DoubleScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Decimal | None], type: None = ...) -> ChunkedArray[Decimal128Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[dict[str, Any] | None], type: None = ...) -> ChunkedArray[StructScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[datetime | None], type: None = ...) -> ChunkedArray[TimestampScalar[Any, None]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[date | None], type: None = ...) -> ChunkedArray[Date32Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[time | None], type: None = ...) -> ChunkedArray[Time64Scalar[Any]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[timedelta | None], type: None = ...) -> ChunkedArray[DurationScalar[Any]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[MonthDayNano | None], type: None = ...) -> ChunkedArray[MonthDayNanoIntervalScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[str | None], type: None = ...) -> ChunkedArray[StringScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[bytearray | None], type: None = ...) -> ChunkedArray[BinaryScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[list[Any] | None], type: None = ...) -> ChunkedArray[ListScalar[Any]]
tests/unit/series/test_series.py:646: note:     def [_Scalar_CoT: Scalar[Any]] chunked_array(values: Iterable[_Scalar_CoT | None], type: None = ...) -> ChunkedArray[_Scalar_CoT]
tests/unit/series/test_series.py:646: note:     def [_DataTypeT: DataType] chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: _DataTypeT) -> ChunkedArray[Scalar[_DataTypeT]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['null']) -> ChunkedArray[NullScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['bool', 'boolean']) -> ChunkedArray[BooleanScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['i1', 'int8']) -> ChunkedArray[Int8Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['i2', 'int16']) -> ChunkedArray[Int16Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['i4', 'int32']) -> ChunkedArray[Int32Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['i8', 'int64']) -> ChunkedArray[Int64Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['u1', 'uint8']) -> ChunkedArray[UInt8Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['u2', 'uint16']) -> ChunkedArray[UInt16Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['u4', 'uint32']) -> ChunkedArray[UInt32Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['u8', 'uint64']) -> ChunkedArray[UInt64Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['f2', 'halffloat', 'float16']) -> ChunkedArray[HalfFloatScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['f4', 'float', 'float32']) -> ChunkedArray[FloatScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['f8', 'double', 'float64']) -> ChunkedArray[DoubleScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['string', 'str', 'utf8']) -> ChunkedArray[StringScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['binary']) -> ChunkedArray[BinaryScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['large_string', 'large_str', 'large_utf8']) -> ChunkedArray[LargeStringScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['large_binary']) -> ChunkedArray[LargeBinaryScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['binary_view']) -> ChunkedArray[BinaryViewScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['string_view']) -> ChunkedArray[StringViewScalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['date32', 'date32[day]']) -> ChunkedArray[Date32Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['date64', 'date64[ms]']) -> ChunkedArray[Date64Scalar]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['time32[s]']) -> ChunkedArray[Time32Scalar[Literal['s']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['time32[ms]']) -> ChunkedArray[Time32Scalar[Literal['ms']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['time64[us]']) -> ChunkedArray[Time64Scalar[Literal['us']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['time64[ns]']) -> ChunkedArray[Time64Scalar[Literal['ns']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['timestamp[s]']) -> ChunkedArray[TimestampScalar[Literal['s'], None]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['timestamp[ms]']) -> ChunkedArray[TimestampScalar[Literal['ms'], None]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['timestamp[us]']) -> ChunkedArray[TimestampScalar[Literal['us'], None]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['timestamp[ns]']) -> ChunkedArray[TimestampScalar[Literal['ns'], None]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['duration[s]']) -> ChunkedArray[DurationScalar[Literal['s']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['duration[ms]']) -> ChunkedArray[DurationScalar[Literal['ms']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['duration[us]']) -> ChunkedArray[DurationScalar[Literal['us']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['duration[ns]']) -> ChunkedArray[DurationScalar[Literal['ns']]]
tests/unit/series/test_series.py:646: note:     def chunked_array(values: Iterable[Any] | SupportArrowStream | SupportArrowArray, type: Literal['month_day_nano_interval']) -> ChunkedArray[MonthDayNanoIntervalScalar]
tests/unit/series/test_series.py:1087: error: Argument 2 to "Series" has incompatible type "Generator[list[range], None, None]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1179: error: Argument "values" to "Series" has incompatible type "Iterator[int]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1180: error: Argument "values" to "Series" has incompatible type "Data"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1181: error: Argument "values" to "Series" has incompatible type "Generator[int, None, None]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1199: error: Argument "values" to "Series" has incompatible type "Iterator[int]"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1566: error: Argument 2 to "Series" has incompatible type "object"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/series/test_series.py:1567: error: Argument 2 to "Series" has incompatible type "object"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_with_columns.py:28: error: Dict entry 6 has incompatible type "str": "bool"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_with_columns.py:30: error: Dict entry 8 has incompatible type "str": "float"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_with_columns.py:33: error: Dict entry 11 has incompatible type "str": "datetime"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_window.py:245: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_window.py:245: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_select.py:8: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_select.py:8: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_replace_strict.py:201: error: Argument 1 to "Series" has incompatible type "dict_keys[int, int]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_replace_strict.py:202: error: Argument 1 to "Series" has incompatible type "dict_values[int, int]"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_pivot.py:438: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_join_asof.py:186: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:386: error: Dict entry 1 has incompatible type "str": "map[float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:411: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:1188: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:1188: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:1189: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join_asof.py:1189: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join.py:81: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_join.py:85: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_is_sorted.py:338: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_is_sorted.py:339: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_is_sorted.py:345: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_is_sorted.py:346: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_is_sorted.py:413: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_group_by_dynamic.py:527: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_group_by.py:960: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_group_by.py:960: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[bool]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_filter.py:233: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_explode.py:30: error: Dict entry 0 has incompatible type "str": "Array[Scalar[LargeListType[Int32Type]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_explode.py:35: error: Dict entry 0 has incompatible type "str": "Array[Scalar[LargeListType[Int32Type]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_comparison.py:284: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_comparison.py:335: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/namespaces/test_struct.py:73: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/operations/namespaces/test_struct.py:73: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/operations/namespaces/test_struct.py:80: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/operations/namespaces/test_struct.py:80: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/operations/aggregation/test_horizontal.py:61: error: Dict entry 0 has incompatible type "str": "bool"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/aggregation/test_horizontal.py:65: error: Dict entry 0 has incompatible type "str": "bool"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/aggregation/test_aggregations.py:472: error: Dict entry 0 has incompatible type "str": "ndarray[Any, Any]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/aggregation/test_aggregations.py:473: error: Dict entry 1 has incompatible type "str": "ndarray[Any, Any]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/lazyframe/optimizations.py:42: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_other.py:147: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:487: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:551: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:574: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:574: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:575: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:575: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:576: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:576: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:576: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:576: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:613: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:613: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:634: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:634: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:635: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:661: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:661: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:686: error: Dict entry 0 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_parquet.py:694: error: Dict entry 0 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_lazy_csv.py:258: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_json.py:187: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/io/test_hive.py:315: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:315: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:316: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:316: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:317: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:317: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:318: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:318: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:445: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:446: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:447: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:476: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:477: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:478: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:516: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:516: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:516: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:516: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:560: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:560: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_hive.py:560: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interop/test_interop.py:23: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "shape"  [union-attr]
tests/unit/interop/test_interop.py:24: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "schema"  [union-attr]
tests/unit/interop/test_interop.py:25: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "columns"  [union-attr]
tests/unit/interop/test_interop.py:38: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "shape"  [union-attr]
tests/unit/interop/test_interop.py:39: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "schema"  [union-attr]
tests/unit/interop/test_interop.py:40: error: Item "Array[Any]" of "Table | Array[Any]" has no attribute "columns"  [union-attr]
tests/unit/interop/test_interop.py:77: error: List item 0 has incompatible type "ListArray[Any]"; expected "bool | None"  [list-item]
tests/unit/interop/test_interop.py:77: error: List item 1 has incompatible type "ListArray[Any]"; expected "bool | None"  [list-item]
tests/unit/interop/test_interop.py:77: error: List item 2 has incompatible type "ListArray[Any]"; expected "bool | None"  [list-item]
tests/unit/interop/test_interop.py:230: error: List item 0 has incompatible type "int"; expected "RecordBatch | Table"  [list-item]
tests/unit/interop/test_interop.py:230: error: List item 1 has incompatible type "int"; expected "RecordBatch | Table"  [list-item]
tests/unit/interop/test_interop.py:279: error: Dict entry 0 has incompatible type "str": "ChunkedArray[ListScalar[Any]]"; expected "str": "Array[Any] | list[Any]"  [dict-item]
tests/unit/interop/test_interop.py:337: error: List item 0 has incompatible type "list[list[None]]"; expected "Array[Any] | ChunkedArray[Any]"  [list-item]
tests/unit/interop/test_interop.py:339: error: Incompatible types in assignment (expression has type "Table | Array[Any]", variable has type "Table")  [assignment]
tests/unit/interop/test_interop.py:346: error: List item 0 has incompatible type "list[int]"; expected "Array[Any] | ChunkedArray[Any]"  [list-item]
tests/unit/interop/test_interop.py:346: error: List item 1 has incompatible type "list[list[tuple[str, str]]]"; expected "Array[Any] | ChunkedArray[Any]"  [list-item]
tests/unit/interop/test_interop.py:654: error: Argument "arrays" to "from_arrays" of "Table" has incompatible type "list[StructArray]"; expected "list[Array[Any]] | list[ChunkedArray[Any]]"  [arg-type]
tests/unit/interop/test_interop.py:654: note: "List" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/unit/interop/test_interop.py:654: note: Consider using "Sequence" instead, which is covariant
tests/unit/interop/numpy/test_ufunc_expr.py:154: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interchange/test_from_dataframe.py:88: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/functions/test_col.py:45: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/functions/test_col.py:45: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/functions/test_col.py:45: error: Dict entry 2 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_struct.py:238: error: Argument 1 to "from_pylist" of "_Tabular" has incompatible type "list[object]"; expected "Sequence[Mapping[str, Any]]"  [arg-type]
tests/unit/datatypes/test_struct.py:680: error: Argument "data" to "DataFrame" has incompatible type "dict[str, object] | list[TestData]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/datatypes/test_struct.py:971: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_object.py:174: error: Dict entry 0 has incompatible type "str": "object"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_null.py:24: error: Dict entry 0 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_null.py:28: error: Dict entry 0 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_array.py:379: error: Argument 2 to "Series" has incompatible type "object"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/datatypes/test_array.py:380: error: Argument 2 to "Series" has incompatible type "object"; expected "Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_from_dict.py:42: error: Dict entry 2 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:42: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:52: error: Dict entry 2 has incompatible type "str": "None"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:52: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:61: error: Dict entry 0 has incompatible type "str": "map[float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:69: error: Dict entry 1 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:70: error: Dict entry 2 has incompatible type "str": "map[float]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:71: error: Dict entry 3 has incompatible type "str": "dict_values[int, str]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:114: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:114: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:114: error: Dict entry 2 has incompatible type "str": "float"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:121: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[unsignedinteger[_8Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:122: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[unsignedinteger[_8Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:123: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[unsignedinteger[_8Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:124: error: Dict entry 3 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:139: error: Dict entry 0 has incompatible type "str": "Iterator[int]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:140: error: Dict entry 1 has incompatible type "str": "Iterator[int]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:141: error: Dict entry 2 has incompatible type "str": "Generator[int, None, None]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:205: error: Dict entry 0 has incompatible type "str": "date"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:205: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:205: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:206: error: Dict entry 0 has incompatible type "str": "date"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_from_dict.py:207: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:207: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:221: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:221: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:222: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/dataframe/test_from_dict.py:222: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/constructors/test_constructors.py:562: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:566: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:619: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:619: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:622: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:622: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:703: error: Dict entry 1 has incompatible type "None": "list[Any]"; expected "str": "list[Any] | Array[Any]"  [dict-item]
tests/unit/constructors/test_constructors.py:713: error: Dict entry 1 has incompatible type "None": "list[Any]"; expected "str": "list[Any] | Array[Any]"  [dict-item]
tests/unit/constructors/test_constructors.py:992: error: Argument 1 to "DataFrame" has incompatible type "int"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_constructors.py:1236: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:1236: note: Error code "dict-item" not covered by "type: ignore" comment
tests/unit/constructors/test_constructors.py:1469: error: Argument 2 to "arrow_to_pyseries" has incompatible type "ChunkedArray[Scalar[Int64Type]]"; expected "Array[Any]"  [arg-type]
tests/unit/constructors/test_constructors.py:1472: error: Item "None" of "Buffer | None" has no attribute "address"  [union-attr]
tests/unit/constructors/test_constructors.py:1551: error: Argument 1 to "DataFrame" has incompatible type "dict[str, floating[_64Bit]]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_constructors.py:1551: error: Dict entry 0 has incompatible type "str": "float"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:1559: error: Dict entry 0 has incompatible type "str": "Expr"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:1561: error: Dict entry 0 has incompatible type "str": "Expr"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/constructors/test_constructors.py:1690: error: Argument 1 to "Series" has incompatible type "PyCapsuleArrayHolder"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_constructors.py:1695: error: Argument 1 to "Series" has incompatible type "PyCapsuleArrayHolder"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/constructors/test_constructors.py:1700: error: Argument 1 to "DataFrame" has incompatible type "PyCapsuleArrayHolder"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/operations/test_inequality_join.py:506: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/test_inequality_join.py:512: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/operations/rolling/test_rolling.py:928: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interop/numpy/test_to_numpy_df.py:243: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/interop/numpy/test_to_numpy_df.py:284: error: Value expression in dictionary comprehension has incompatible type "ndarray[Any, dtype[floating[_64Bit]]]"; expected type "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [misc]
tests/unit/interchange/test_roundtrip.py:50: error: Module has no attribute "from_dataframe"  [attr-defined]
tests/unit/interchange/test_roundtrip.py:69: error: Module has no attribute "from_dataframe"  [attr-defined]
tests/unit/interchange/test_roundtrip.py:263: error: Module has no attribute "from_dataframe"  [attr-defined]
tests/unit/interchange/test_roundtrip.py:274: error: Module has no attribute "from_dataframe"  [attr-defined]
tests/unit/test_errors.py:700: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_group_by.py:156: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_group_by.py:318: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/streaming/test_streaming_group_by.py:319: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/lazyframe/test_lazyframe.py:425: error: Argument 1 to "LazyFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/lazyframe/test_lazyframe.py:469: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/lazyframe/test_lazyframe.py:478: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_parquet.py:226: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/io/test_parquet.py:414: error: Argument 1 to "struct" has incompatible type "list[tuple[str, DictionaryType[Int64Type, StringType, Literal[False]]]]"; expected "Iterable[Field[Any] | tuple[str, Field[Any]]] | Mapping[str, Field[Any]]"  [arg-type]
tests/unit/io/test_parquet.py:417: error: Argument 2 to "from_arrays" of "DictionaryArray" has incompatible type "list[str]"; expected "Array[Any] | ndarray[Any, Any] | Series[Any]"  [arg-type]
tests/unit/io/test_parquet.py:418: error: Argument "fields" to "from_arrays" of "StructArray" has incompatible type "StructType"; expected "list[Field[Any]] | None"  [arg-type]
tests/unit/io/test_parquet.py:826: error: TypedDict "_FileMetaData" has no key "row_groups"  [typeddict-item]
tests/unit/io/test_parquet.py:826: note: Did you mean "num_row_groups"?
tests/unit/io/test_parquet.py:1070: error: TypedDict "_FileMetaData" has no key "row_groups"  [typeddict-item]
tests/unit/io/test_parquet.py:1070: note: Did you mean "num_row_groups"?
tests/unit/io/test_parquet.py:1116: error: Item "None" of "Statistics | None" has no attribute "min"  [union-attr]
tests/unit/io/test_parquet.py:1117: error: Item "None" of "Statistics | None" has no attribute "max"  [union-attr]
tests/unit/io/test_parquet.py:1165: error: Incompatible types in assignment (expression has type "BooleanArray", variable has type "ndarray[Any, dtype[bool]]")  [assignment]
tests/unit/io/test_parquet.py:1194: error: No overload variant of "from_arrays" of "ListArray" matches argument types "BooleanArray", "Any", "ndarray[Any, dtype[bool]] | None"  [call-overload]
tests/unit/io/test_parquet.py:1194: note: Possible overload variants:
tests/unit/io/test_parquet.py:1194: note:     def [_Scalar_CoT: Scalar[Any], _DataTypeT: DataType] from_arrays(cls, offsets: Int32Array, values: Array[Scalar[_DataTypeT]], *, type: None = ..., pool: MemoryPool | None = ..., mask: list[builtins.bool | None] | ndarray[Any, dtype[numpy.bool]] | BooleanArray | None = ...) -> ListArray[ListScalar[_DataTypeT]]
tests/unit/io/test_parquet.py:1194: note:     def [_Scalar_CoT: Scalar[Any], _DataTypeT: DataType] from_arrays(cls, offsets: Int32Array, values: Array[Any], *, type: _DataTypeT, pool: MemoryPool | None = ..., mask: list[builtins.bool | None] | ndarray[Any, dtype[numpy.bool]] | BooleanArray | None = ...) -> ListArray[ListScalar[_DataTypeT]]
tests/unit/io/test_parquet.py:1228: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_32Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_parquet.py:1322: error: List item 0 has incompatible type "list[list[tuple[int, int]]]"; expected "Array[Any] | ChunkedArray[Any]"  [list-item]
tests/unit/io/test_parquet.py:1325: error: No overload variant of "map_" matches argument types "Int32Type", "Int32Type", "bool"  [call-overload]
tests/unit/io/test_parquet.py:1325: note: Possible overload variants:
tests/unit/io/test_parquet.py:1325: note:     def [_K: _BasicDataType[Any], _IndexT: _BasicDataType[Any]] map_(key_type: _K, item_type: _IndexT) -> MapType[_K, _IndexT, Literal[False]]
tests/unit/io/test_parquet.py:1325: note:     def [_K: _BasicDataType[Any], _IndexT: _BasicDataType[Any], _Ordered] map_(key_type: _K, item_type: _IndexT, key_sorted: _Ordered) -> MapType[_K, _IndexT, _Ordered]
tests/unit/io/test_parquet.py:1398: error: Argument "compression" to "write_table" has incompatible type "Literal['NONE']"; expected "Literal['gzip', 'bz2', 'brotli', 'lz4', 'lz4_frame', 'lz4_raw', 'zstd', 'snappy']"  [arg-type]
tests/unit/io/test_parquet.py:1453: error: Argument "compression" to "write_table" has incompatible type "Literal['NONE']"; expected "Literal['gzip', 'bz2', 'brotli', 'lz4', 'lz4_frame', 'lz4_raw', 'zstd', 'snappy']"  [arg-type]
tests/unit/io/test_parquet.py:1475: error: Argument "compression" to "write_table" has incompatible type "Literal['NONE']"; expected "Literal['gzip', 'bz2', 'brotli', 'lz4', 'lz4_frame', 'lz4_raw', 'zstd', 'snappy']"  [arg-type]
tests/unit/io/test_parquet.py:1497: error: Argument "compression" to "write_table" has incompatible type "Literal['NONE']"; expected "Literal['gzip', 'bz2', 'brotli', 'lz4', 'lz4_frame', 'lz4_raw', 'zstd', 'snappy']"  [arg-type]
tests/unit/io/test_parquet.py:1586: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/io/test_parquet.py:1586: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object]"  [dict-item]
tests/unit/io/test_parquet.py:1611: error: No overload variant of "list_" matches argument types "Field[StringType]", "int"  [call-overload]
tests/unit/io/test_parquet.py:1611: note: Possible overload variants:
tests/unit/io/test_parquet.py:1611: note:     def [_DataTypeT: DataType] list_(value_type: Field[_DataTypeT]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1611: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1611: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT, list_size: Literal[-1]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1611: note:     def [_DataTypeT: DataType, _Size] list_(value_type: _DataTypeT, list_size: _Size) -> FixedSizeListType[_DataTypeT, _Size]
tests/unit/io/test_parquet.py:1612: error: No overload variant of "list_" matches argument types "Field[StringType]", "int"  [call-overload]
tests/unit/io/test_parquet.py:1612: note: Possible overload variants:
tests/unit/io/test_parquet.py:1612: note:     def [_DataTypeT: DataType] list_(value_type: Field[_DataTypeT]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1612: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1612: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT, list_size: Literal[-1]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1612: note:     def [_DataTypeT: DataType, _Size] list_(value_type: _DataTypeT, list_size: _Size) -> FixedSizeListType[_DataTypeT, _Size]
tests/unit/io/test_parquet.py:1615: error: No overload variant of "list_" matches argument types "Field[StringType]", "int"  [call-overload]
tests/unit/io/test_parquet.py:1615: note: Possible overload variants:
tests/unit/io/test_parquet.py:1615: note:     def [_DataTypeT: DataType] list_(value_type: Field[_DataTypeT]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1615: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1615: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT, list_size: Literal[-1]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1615: note:     def [_DataTypeT: DataType, _Size] list_(value_type: _DataTypeT, list_size: _Size) -> FixedSizeListType[_DataTypeT, _Size]
tests/unit/io/test_parquet.py:1619: error: No overload variant of "list_" matches argument types "Field[StringType]", "int"  [call-overload]
tests/unit/io/test_parquet.py:1619: note: Possible overload variants:
tests/unit/io/test_parquet.py:1619: note:     def [_DataTypeT: DataType] list_(value_type: Field[_DataTypeT]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1619: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1619: note:     def [_DataTypeT: DataType] list_(value_type: _DataTypeT, list_size: Literal[-1]) -> ListType[_DataTypeT]
tests/unit/io/test_parquet.py:1619: note:     def [_DataTypeT: DataType, _Size] list_(value_type: _DataTypeT, list_size: _Size) -> FixedSizeListType[_DataTypeT, _Size]
tests/unit/io/test_parquet.py:1931: error: Dict entry 0 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_parquet.py:1931: error: Dict entry 1 has incompatible type "str": "int"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_csv.py:1629: error: Dict entry 0 has incompatible type "str": "datetime"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/io/test_csv.py:2020: error: Dict entry 1 has incompatible type "str": "date"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/datatypes/test_temporal.py:398: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/datatypes/test_temporal.py:487: error: "Array[Any]" has no attribute "type"  [attr-defined]
tests/unit/datatypes/test_temporal.py:531: error: Argument "arrays" to "from_arrays" of "Table" has incompatible type "list[object]"; expected "list[Array[Any]] | list[ChunkedArray[Any]]"  [arg-type]
tests/unit/datatypes/test_temporal.py:822: error: Argument 1 to "Series" has incompatible type "object"; expected "str | Sequence[Any] | polars.series.series.Series | Array[Any] | ChunkedArray[Any] | ndarray[Any, Any] | pandas.core.series.Series[Any] | DatetimeIndex | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/datatypes/test_temporal.py:898: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:263: error: Argument "data" to "from_arrow" has incompatible type "str"; expected "Table | Array[Any] | ChunkedArray[Any] | RecordBatch | Iterable[RecordBatch | Table]"  [arg-type]
tests/unit/dataframe/test_df.py:263: note: Following member(s) of "str" have conflicts:
tests/unit/dataframe/test_df.py:263: note:     Expected:
tests/unit/dataframe/test_df.py:263: note:         def __iter__(self) -> Iterator[RecordBatch | Table]
tests/unit/dataframe/test_df.py:263: note:     Got:
tests/unit/dataframe/test_df.py:263: note:         def __iter__(self) -> Iterator[str]
tests/unit/dataframe/test_df.py:266: error: Generator has incompatible item type "int"; expected "RecordBatch | Table"  [misc]
tests/unit/dataframe/test_df.py:281: error: Dict entry 0 has incompatible type "str": "ChunkedArray[Scalar[StructType]]"; expected "str": "Array[Any] | list[Any]"  [dict-item]
tests/unit/dataframe/test_df.py:821: error: Argument 1 to "table" has incompatible type "dict[str, list[int]]"; expected "dict[str, list[Any] | Array[Any]] | list[Array[Any] | ChunkedArray[Any]] | DataFrame | SupportArrowArray | SupportArrowStream | SupportArrowDeviceArray"  [arg-type]
tests/unit/dataframe/test_df.py:821: note: "Dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
tests/unit/dataframe/test_df.py:821: note: Consider using "Mapping" instead, which is covariant in the value type
tests/unit/dataframe/test_df.py:962: error: Argument 1 to "DataFrame" has incompatible type "dict[str, object]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1008: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1014: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1036: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1156: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_32Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1157: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[_8Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1159: error: Dict entry 3 has incompatible type "str": "ndarray[Any, dtype[Any]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:1233: error: Argument "data" to "DataFrame" has incompatible type "Iterator[Any]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1243: error: Argument "data" to "DataFrame" has incompatible type "Iterator[Any]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1244: error: Argument "data" to "DataFrame" has incompatible type "Rows"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1245: error: Argument "data" to "DataFrame" has incompatible type "Generator[Any, None, None]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1283: error: Argument "data" to "DataFrame" has incompatible type "Iterator[dict[str, list[str]] | dict[str, None]]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:1291: error: Argument "data" to "DataFrame" has incompatible type "Iterator[Any]"; expected "Mapping[str, Sequence[object] | Mapping[str, Sequence[object]] | Series] | Sequence[Any] | ndarray[Any, Any] | Table | DataFrame | ArrowArrayExportable | ArrowStreamExportable | None"  [arg-type]
tests/unit/dataframe/test_df.py:2500: error: Dict entry 0 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:2500: error: Dict entry 1 has incompatible type "str": "ndarray[Any, dtype[signedinteger[Any]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:2771: error: Dict entry 1 has incompatible type "str": "date"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
tests/unit/dataframe/test_df.py:2895: error: Dict entry 2 has incompatible type "str": "ndarray[Any, dtype[floating[_64Bit]]]"; expected "str": "Sequence[object] | Mapping[str, Sequence[object]] | Series"  [dict-item]
Found 385 errors in 74 files (checked 538 source files)
